FORMAT: 1A

# IPFS

The API for interacting with IPFS nodes.

The HTTP API is currently accepting all methods, so GET will work just as well as POST for any group. Because of this, the methods shown below are the specifications that should be adhered to, although any will work. For more, see this discussion: https://github.com/ipfs/go-ipfs/issues/2165.

# Group add [POST /add{?arg}{&r,p,t,n,w,H,s}]

Add a file to IPFS.

Note that directories are added recursively, to form the ipfs
MerkleDAG.

#### curl

    curl -F "file=@test" "http://localhost:5001/api/v0/add"

+ Parameters
    + arg (string, required) - The path to a file to be added to IPFS.
    + r (boolean, optional) - Recursive. Add directory paths recursively.
    + p (boolean, optional) - Progress. Stream progress data.
    + t (boolean, optional) - Trickle. Use trickle-dag format for dag generation.
    + n (boolean, optional) - Only-hash. Only chunk and hash - do not write to disk.
    + w (boolean, optional) - Wrap-with-directory. Wrap files with a directory object.
    + H (boolean, optional) - Hidden. Include files that are hidden.
    + s (boolean, optional) - Chunker. Chunking algorithm to use.

+ Request Single File (multipart/form-data)

    #### Curl

        curl -F "file=@test" "http://localhost:5001/api/v0/add"

    + Body

        ```
        curl -F "file=@test" "http://localhost:5001/api/v0/add"
        ```

+ Response 200 (application/json)

    Note that the response sends a 100 continuation code before a 200 code.

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Fri, 08 Jan 2016 14:48:18 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes
        + Name (string)
        + Hash (Multihash)

    + Body

        ```
        {
            "Name":"test",
            "Hash":"QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        ```

+ Request Progress (multipart/form-data)

    #### Curl

        curl -F "file=@test" "http://localhost:5001/api/v0/add?p"

    + Body

        ```
        curl -F "file=@test" "http://localhost:5001/api/v0/add?p"
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 14:00:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Bytes: 12 (number)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test",
          "Bytes": 12
        }
        {
          "Name": "test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        ```

+ Request Trickle (multipart/form-data)

    #### Curl

        curl -F "file=@test" "http://localhost:5001/api/v0/add?t"

    + Body

        ```
        curl -F "file=@test" "http://localhost:5001/api/v0/add?t"
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 14:00:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        ```

+ Request Only Hash (multipart/form-data)

    #### Curl

        curl -F "file=@test" "http://localhost:5001/api/v0/add?n"

    + Body

        ```
        curl -F "file=@test" "http://localhost:5001/api/v0/add?n"
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 14:00:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test",
          "Bytes": 12
        }
        {
          "Name": "test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        ```

+ Request Wrap with Directory (multipart/form-data)

    #### Curl

        curl -F "file=@test" "http://localhost:5001/api/v0/add?w"

    + Body

        ```
        curl -F "file=@test" "http://localhost:5001/api/v0/add?w"
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 14:00:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        {
          "Name": "",
          "Hash": "QmV7sQezAjKh9pokjUPLL7ebuMF5t56UmfhK4cJncCcrNZ"
        }
        ```

+ Request Hidden (multipart/form-data)

    #### Curl

        curl -F "file=@test" "http://localhost:5001/api/v0/add?H"

    + Body

        ```
        curl -F "file=@test" "http://localhost:5001/api/v0/add?H"
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 14:00:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        ```

+ Request Chunker (multipart/form-data)

    #### Curl

        curl -F "file=@test" "http://localhost:5001/api/v0/add?s"

    + Body

        ```
        curl -F "file=@test" "http://localhost:5001/api/v0/add?s"
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 14:00:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        ```

+ Request Recursive (multipart/form-data)

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 13:09:00 GMT
        Connection: close
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Bytes: 12 (number)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test/test",
          "Bytes": 12
        }
        {
          "Name": "test/test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        {
          "Name": "test",
          "Hash": "QmV7sQezAjKh9pokjUPLL7ebuMF5t56UmfhK4cJncCcrNZ"
        }
        ```

+ Request Empty Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/add"

    + Body

      ```
      curl -i "http://localhost:5001/api/v0/add"
      ```

+ Response 400

    + Headers

        ```
        Date: Fri, 08 Jan 2016 15:22:01 GMT
        Content-Length: 32
        Content-Type: text/plain; charset=utf-8
        ```

    + Body

        ```
        File argument `path` is required
        ```

# Group bitswap

## stat

## unwant

## wantlist

# Group block

Manipulate raw IPFS blocks.

## block [GET /block]

+ Request Without Subcommands

    #### curl

        curl -i "http://localhost:5001/api/v0/block"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/block"
        ```

+ Response 400

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 21:23:38 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "This command can't be called directly. Try one of its subcommands."
        - Code: 1

    + Body

        ```
        {
          "Message": "This command can't be called directly. Try one of its subcommands.",
          "Code": 1
        }
        ```

## get [GET /block/get{?arg}]

Store data as a raw ipfs block.

+ Parameters
    + arg (Multihash, required) - hash of the block to be fetched

+ Request No Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/block/get"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/block/get"
        ```

+ Response 400

    + Headers

        ```
        Date: Fri, 29 Jan 2016 21:46:01 GMT
        Content-Length: 26
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        Argument 'key' is required
        ```

+ Request With Empty Argument

    The response is the same if the argument is invalid. For instance:

        curl -i "http://localhost:5001/api/v0/block/get?arg=kitten"

    #### curl

        curl -i "http://localhost:5001/api/v0/block/get?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/block/get?arg="
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 21:46:59 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "Not a valid hash"
        - Code: 0

    + Body

        ```
        {
          "Message": "Not a valid hash",
          "Code": 0
        }
        ```

+ Request With Valid Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/block/get?arg=QmT78zSuBmuS4z925WZfrqQ1qHaJ56DQaTfyMUF7F8ff5o"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/block/get?arg=QmT78zSuBmuS4z925WZfrqQ1qHaJ56DQaTfyMUF7F8ff5o"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: text/plain
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Stream-Output: 1
        Date: Thu, 04 Feb 2016 22:51:40 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        hello world
        ```

## put [POST /block/put{?arg}]

Stores input as an IPFS block

'ipfs block put' is a plumbing command for storing raw IPFS blocks.

+ Parameters
    + arg (string, required) - The data to be stored as an IPFS block.

+ Request Without Arguments

    #### curl

        curl -i -X POST "http://localhost:5001/api/v0/block/put"

    + Body

        ```
        curl -i -X POST "http://localhost:5001/api/v0/block/put"
        ```

+ Response 400

    + Headers

        ```
        Date: Fri, 29 Jan 2016 21:48:34 GMT
        Content-Length: 32
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        File argument 'data' is required
        ```

+ Request Invalid Argument (multipart/form-data)

    The response is the same if there is no data provided. For example:

        curl -i -X POST -F "data=" "http://localhost:5001/api/v0/block/put"

    #### curl

        curl -i -X POST -F "data=invalid" "http://localhost:5001/api/v0/block/put"

    + Body

        ```
        curl -i -X POST -F "data=invalid" "http://localhost:5001/api/v0/block/put"
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 21:59:43 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "mime: no media type"
        - Code: 0

    + Body

        ```
        {
          "Message": "mime: no media type",
          "Code": 0
        }
        ```

+ Request Valid Argument (multipart/form-data)

    In the example provided, the 'test' file has the following contents:

        ```
        hello world
        ```

    #### curl

        curl -i -X POST -F "data=@test" "http://localhost:5001/api/v0/block/put"

    + Body

        ```
        curl -i -X POST -F "data=@test" "http://localhost:5001/api/v0/block/put"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 21:56:18 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        - Key: "QmZjTnYw2TFhn9Nn7tjmPSoTBoY7YRkwPzwSrSbabY24Kp" (Multihash)
        - Size: 12 (number)

    + Body

        ```
        {
          "Key": "QmZjTnYw2TFhn9Nn7tjmPSoTBoY7YRkwPzwSrSbabY24Kp",
          "Size": 12
        }
        ```

## stat [GET /block/stat?{arg}]
Retrieve information on a raw ipfs block.

+ Parameters
    + arg (Multihash, required) - Hash of the block to retrieve stats on.

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/block/stat"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/block/stat"
        ```

+ Response 400

    + Headers

        ```
        Date: Fri, 29 Jan 2016 21:25:34 GMT
        Content-Length: 26
        Content-Type: text/plain; charset=utf-8
        ```

    + Body

        ```
        Argument 'key' is required
        ```

+ Request Invalid Argument

    The response is the same if there is no argument provided. For example:

        curl -i -F "data=" "http://localhost:5001/api/v0/block/stat/arg="

    #### curl

        curl -i "http://localhost:5001/api/v0/block/stat/arg=kitten"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/block/stat/arg=kitten"
        ```

+ Response 400

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 21:27:22 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "Not a valid hash"
        - Code: 0

    + Body

        ```
        {
          "Message": "Not a valid hash",
          "Code": 0
        }
        ```

+ Request Valid Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/block/stat?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/block/stat?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 21:40:38 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Key (Multihash)
        + Size (number) - the size of the block in bytes

    + Body

        ```
        {
          "Key": "QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ",
          "Size": 55
        }
        ```

# Group bootstrap
Show or edit the list of bootstrap peers.

Running `ipfs bootstrap` with no arguments will run `ipfs bootstrap list`.

**Security Warning**:

The bootstrap command manipulates the `bootstrap list`, which contains
the addresses of bootstrap nodes. These are the *trusted peers* from
which to learn about other peers in the network. Only edit this list
if you understand the risks of adding or removing nodes from this list.

+ Request No Subcommands

    #### curl

         curl -i http://localhost:5001/api/v0/bootstrap

    + Body

        ```
         curl -i http://localhost:5001/api/v0/bootstrap
         ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:29:38 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers (array)
            - (MultiAddr)

    + Body

        ```
        {
          "Peers": [
            "/ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ",
            "/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z",
            "/ip4/104.236.179.241/tcp/4001/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM",
            "/ip4/162.243.248.213/tcp/4001/ipfs/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm",
            "/ip4/128.199.219.111/tcp/4001/ipfs/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu",
            "/ip4/104.236.76.40/tcp/4001/ipfs/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64",
            "/ip4/178.62.158.247/tcp/4001/ipfs/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd",
            "/ip4/178.62.61.185/tcp/4001/ipfs/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3",
            "/ip4/104.236.151.122/tcp/4001/ipfs/QmSoLju6m7xTh3DuokvT3886QRYqxAzb1kShaanJgW36yx"
          ]
        }
        ```

## add [GET /bootstrap/add{?arg}{&default}]
Add peers to the bootstrap list.

Outputs a list of peers that were added (that weren't already
in the bootstrap list).

+ Parameters
    + arg (MultiAddr, required) - A peer to add to the bootstrap list.
    + default (boolean, optional) - Add default bootstrap nodes.

+ Request No Arguments

    #### curl

         curl -i http://localhost:5001/api/v0/bootstrap/add

    + Body

        ```
         curl -i http://localhost:5001/api/v0/bootstrap/add
         ```

+ Response 400

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:36:08 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "no bootstrap peers to add"
        - Code: 1

    + Body

        ```
        {
          "Message": "no bootstrap peers to add",
          "Code": 1
        }
        ```

+ Request Invalid Argument

    #### curl

         curl -i http://localhost:5001/api/v0/bootstrap/add?arg=QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ

    + Body

        ```
         curl -i http://localhost:5001/api/v0/bootstrap/add?arg=QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:39:48 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid multiaddr, must begin with /"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid multiaddr, must begin with /",
          "Code": 0
        }
        ```

+ Request Empty Argument

    #### curl

         curl -i http://localhost:5001/api/v0/bootstrap/add?arg=

    + Body

        ```
         curl -i http://localhost:5001/api/v0/bootstrap/add?arg=
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:41:16 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid ipfs address"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid ipfs address",
          "Code": 0
        }
        ```

+ Request Valid Argument

    #### curl

         curl -i http://localhost:5001/api/v0/bootstrap/add?arg=/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z

    + Body

        ```
         curl -i http://localhost:5001/api/v0/bootstrap/add?arg=/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:42:45 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers (array)
            - (MultiAddr)

    + Body

        ```
        {
          "Peers": [
            "/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z"
          ]
        }
        ```

+ Request Default Option

    #### curl

         curl -i http://localhost:5001/api/v0/bootstrap/add?default

    + Body

        ```
         curl -i http://localhost:5001/api/v0/bootstrap/add?default
         ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:38:09 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers (array)
            - (MultiAddr)

    + Body

        ```
        {
          "Peers": [
            "/ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ",
            "/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z",
            "/ip4/104.236.179.241/tcp/4001/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM",
            "/ip4/162.243.248.213/tcp/4001/ipfs/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm",
            "/ip4/128.199.219.111/tcp/4001/ipfs/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu",
            "/ip4/104.236.76.40/tcp/4001/ipfs/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64",
            "/ip4/178.62.158.247/tcp/4001/ipfs/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd",
            "/ip4/178.62.61.185/tcp/4001/ipfs/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3",
            "/ip4/104.236.151.122/tcp/4001/ipfs/QmSoLju6m7xTh3DuokvT3886QRYqxAzb1kShaanJgW36yx"
          ]
        }
        ```

## list [GET /bootstrap/list]
Show peers in the bootstrap list

+ Request Without Options

    #### curl

        curl -i http://localhost:5001/api/v0/bootstrap/list

    + Body

        ```
        curl -i http://localhost:5001/api/v0/bootstrap/list
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:51:06 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers (array)
            - (MultiAddr)
    + Body

        ```
        {
          "Peers": [
            "/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z",
            "/ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ",
            "/ip4/104.236.179.241/tcp/4001/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM",
            "/ip4/162.243.248.213/tcp/4001/ipfs/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm",
            "/ip4/128.199.219.111/tcp/4001/ipfs/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu",
            "/ip4/104.236.76.40/tcp/4001/ipfs/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64",
            "/ip4/178.62.158.247/tcp/4001/ipfs/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd",
            "/ip4/178.62.61.185/tcp/4001/ipfs/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3",
            "/ip4/104.236.151.122/tcp/4001/ipfs/QmSoLju6m7xTh3DuokvT3886QRYqxAzb1kShaanJgW36yx"
          ]
        }
        ```

## rm [GET /bootstrap/rm{?arg}{&all}]
Removes peers from the bootstrap list.

Outputs the list of peers that were removed.

+ Parameters
    + arg (MultiAddr, optional) - A peer to add to the bootstrap list
    + all (boolean, optional) - Remove all bootstrap peers.

+ Request Without Options

    #### curl

        curl -i http://localhost:5001/api/v0/bootstrap/rm

    + Body

        ```
        curl -i http://localhost:5001/api/v0/bootstrap/rm
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 23:17:18 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers: [] (array)

    + Body

        ```
        {
          "Peers": []
        }
        ```

+ Request With All

    #### curl

        curl -i http://localhost:5001/api/v0/bootstrap/rm?all

    + Body

        ```
        curl -i http://localhost:5001/api/v0/bootstrap/rm?all
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 23:18:17 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers (array)
            - (MultiAddr)

    + Body

        ```
        {
          "Peers": [
            "/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z",
            "/ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ",
            "/ip4/104.236.179.241/tcp/4001/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM",
            "/ip4/162.243.248.213/tcp/4001/ipfs/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm",
            "/ip4/128.199.219.111/tcp/4001/ipfs/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu",
            "/ip4/104.236.76.40/tcp/4001/ipfs/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64",
            "/ip4/178.62.158.247/tcp/4001/ipfs/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd",
            "/ip4/178.62.61.185/tcp/4001/ipfs/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3",
            "/ip4/104.236.151.122/tcp/4001/ipfs/QmSoLju6m7xTh3DuokvT3886QRYqxAzb1kShaanJgW36yx"
          ]
        }
        ```

+ Request With Empty Argument

    #### curl

        curl -i http://localhost:5001/api/v0/bootstrap/rm?arg=

    + Body

        ```
        curl -i http://localhost:5001/api/v0/bootstrap/rm?arg=
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 23:20:35 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid ipfs address"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid ipfs address",
          "Code": 0
        }
        ```

+ Request With Invalid Argument

    #### curl

        curl -i http://localhost:5001/api/v0/bootstrap/rm?arg=invalid

    + Body

        ```
        curl -i http://localhost:5001/api/v0/bootstrap/rm?arg=invalid
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 23:21:26 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid multiaddr, must begin with /"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid multiaddr, must begin with /",
          "Code": 0
        }
        ```

+ Request With Valid Argument

    #### curl

        curl -i http://localhost:5001/api/v0/bootstrap/rm?arg=/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z

    + Body

        ```
        curl -i http://localhost:5001/api/v0/bootstrap/rm?arg=/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 23:22:34 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers (array)
            - (Multihash)

    + Body

        ```
        {
          "Peers": []
        }
        ```

# Group cat

Show IPFS object data.

## cat [GET /cat{?arg}]
Retrieves the object named by <ipfs-or-ipns-path> and outputs the data it contains.

+ Parameters
    + arg (string, required) - The path to the IPFS object or objects to be outputted.

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/cat"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/cat"
        ```

+ Response 400

    + Headers

        ```
        Date: Fri, 05 Feb 2016 17:14:24 GMT
        Content-Length: 32
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

        This is the raw content of the file.

    + Body

        ```
        Argument 'ipfs-path' is required
        ```

+ Request With Empty Argument

    The response is the same if there is an invalid argument. For example:

        curl -i "http://localhost:5001/api/v0/cat?arg=kitten"

    #### curl

        curl -i "http://localhost:5001/api/v0/cat?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/cat?arg="
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 05 Feb 2016 17:14:49 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid ipfs ref path"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid ipfs ref path",
          "Code": 0
        }
        ```

+ Request With Valid Argument But Invalid DAG Node

    The multihash in this request is for a directory, not for an object.

    #### curl

        curl -i "http://localhost:5001/api/v0/cat?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/cat?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 05 Feb 2016 17:16:07 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "this dag node is a directory"
        - Code: 0

    + Body

        ```
        {
          "Message": "this dag node is a directory",
          "Code": 0
        }
        ```

+ Request With Valid Argument

    In this request, 'QmT78zSuBmuS4z925WZfrqQ1qHaJ56DQaTfyMUF7F8ff5o' is the hash for a file, 'test',
    with the following contents

        ```
        hello world
        ```

    #### curl

        curl -i "http://localhost:5001/api/v0/cat?arg=QmT78zSuBmuS4z925WZfrqQ1qHaJ56DQaTfyMUF7F8ff5o"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/cat?arg=QmT78zSuBmuS4z925WZfrqQ1qHaJ56DQaTfyMUF7F8ff5o"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: text/plain
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Stream-Output: 1
        Date: Fri, 05 Feb 2016 17:18:10 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        hello world
        ```

# Group commands

# Group config

## edit

## replace

## show

# Group daemon

# Group dht

## findpeer

## findprovs

## get

## put

## query

# Group diag

## net

## sys

# Group dns

# Group file

Interact with IPFS objects representing Unix filesystems.

This provides a familiar interface to file systems represented
by IPFS objects, which hides IPFS implementation details like layout
objects (e.g. fanout and chunking).

This command can't be called directly.

## ls [GET /file/ls{?arg}]
List directory contents for Unix filesystem object

Retrieves the object named by <ipfs-or-ipns-path> and displays the
contents.

The JSON output contains size information. For files, the child size
is the total size of the file contents. For directories, the child
size is the IPFS link size.

+ Parameters
    + arg (string, required) - The path to the IPFS object or objects to list links from.

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/file/ls"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/file/ls"
        ```

+ Response 400

    + Headers

        ```
        Date: Sat, 06 Feb 2016 23:13:03 GMT
        Content-Length: 32
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        Argument 'ipfs-path' is required
        ```

+ Request With Empty Argument

    The response is the same if the argument is invalid. For example:

        curl -i "http://localhost:5001/api/v0/file/ls?arg=kitten"

    #### curl

        curl -i "http://localhost:5001/api/v0/file/ls?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/file/ls?arg="
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Sat, 06 Feb 2016 23:13:43 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid ipfs ref path"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid ipfs ref path",
          "Code": 0
        }
        ```

+ Request With Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/file/ls?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/file/ls?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Sat, 06 Feb 2016 23:15:00 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes
        + Argument (object)
            - Key (Multihash) - Where 'Key' is the IPFS object's multihash.
        + Objects (object)
            + Key (object) - Where 'Key' is the IPFS object's multihash.
                - Hash (Multihash)
                - Size (number)
                - Type (string)
                - Links (array)
                    - (object)
                        - Name (string)
                        - Hash (Multihash)
                        - Size (number)
                        - Type (string)

    + Body

        ```
        {
          "Arguments": {
            "QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ": "QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"
          },
          "Objects": {
            "QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ": {
              "Hash": "QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ",
              "Size": 0,
              "Type": "Directory",
              "Links": [
                {
                  "Name": "cat.jpg",
                  "Hash": "Qmd286K6pohQcTKYqnS1YhWrCiS4gz7Xi34sdwMe9USZ7u",
                  "Size": 443230,
                  "Type": "File"
                }
              ]
            }
          }
        }
        ```

# Group files
Manipulate unixfs files.

Files is an API for manipulating ipfs objects as if they were a unix filesystem.

Note:
Most of the subcommands of 'ipfs files' accept the 'flush' option. It defaults to
true. Use caution when setting this to false. It will improve performance
for large numbers of file operations, but it does so at the cost of consistency
guarantees.

This command can't be called directly.

## rm [GET /files/rm{?arg}{&recursive,flush}]
Remove a file.

### Bugs

- Recursive seems to default to true. CF: https://github.com/ipfs/go-ipfs/issues/2378

+ Parameters
    + arg (string, required) - File to remove.
    + recursive (boolean, optional) - Recursively remove directories. Alias: r.
    + flush (boolean, optional) - Flush target and ancestors after write. Default: true. Alias: f.

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/files/rm"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/rm"
        ```

+ Response 400

    + Headers

        ```
        Date: Fri, 19 Feb 2016 15:02:04 GMT
        Content-Length: 27
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        Argument 'path' is required
        ```

+ Request With Empty Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/files/rm?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/rm?arg="
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 15:02:35 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "paths must not be empty"
        - Code: 0

    + Body

        ```
        {
          "Code": 0,
          "Message": "paths must not be empty"
        }
        ```

+ Request With Invalid Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/files/rm?arg=kitten"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/rm?arg=kitten"
        ```

+ Response 500


    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 15:03:10 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "paths must start with a leading slash"
        - Code: 0

    + Body

        ```
        {
          "Code": 0,
          "Message": "paths must start with a leading slash"
        }
        ```

+ Request With Argument

    This request is dependent on there being a 'test' file in your Files API folder.

    #### curl

        curl -i "http://localhost:5001/api/v0/files/rm?arg=/test"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/rm?arg=/test"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 15:37:01 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        ```

+ Request With Argument And Recursive Option

    This request is dependent on there being a 'test' folder in your Files API folder.

    #### curl

        curl -i "http://localhost:5001/api/v0/files/rm?arg=/test&recursive=true"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/rm?arg=/test&recursive=true"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 15:39:19 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        ```

## flush [GET /files/flush{?arg}{&flush}]
Flush a given path's data to disk.

Flush a given path to disk. This is only useful when other commands
are run with the 'flush' optin set to false.

+ Parameters
    + arg (string, required) - Path to flush. Default: '/'.

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/files/flush"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/flush"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:00:10 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        ```

+ Request With Empty Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/files/flush?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/flush?arg="
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:00:29 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        ```

+ Request With Invalid Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/files/flush?arg=kitten"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/flush?arg=kitten"
        ```

+ Response 500


    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:00:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "file does not exist"
        - Code: 0

    + Body

        ```
        {
          "Code": 0,
          "Message": "file does not exist"
        }
        ```

+ Request With Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/files/flush?arg=/test"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/flush?arg=/test"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:01:27 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        ```

## mv [GET /files/mv{?arg,arg2}{&flush}]
Move files.

Move files around. Just like traditional unix mv.

+ Parameters
    + arg (string, required) - Source file to move.
    + arg2 (string, required) - Target path for file to be moved to.
    + flush (boolean, optional) - Flush target and ancestors after write. Default: true. Alias: f.

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/files/mv"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/mv"
        ```

+ Response 400

    + Headers

        ```
        Date: Fri, 19 Feb 2016 16:07:11 GMT
        Content-Length: 29
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        Argument 'source' is required
        ```

+ Request With Empty Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/files/mv?arg=&arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/mv?arg=&arg="
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:07:57 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "paths must not be empty"
        - Code: 0

    + Body

        ```
        {
          "Code": 0,
          "Message": "paths must not be empty"
        }
        ```

+ Request With Invalid Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/files/mv?arg=kitten&arg=kitten"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/mv?arg=kitten&arg=kitten"
        ```

+ Response 500


    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:08:45 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "paths must start with a leading slash"
        - Code: 0

    + Body

        ```
        {
          "Code": 0,
          "Message": "paths must start with a leading slash"
        }
        ```

+ Request With Non-Existent Argument

    This call depends upon a file in the Files API called 'here', which must not exist.

    #### curl

        curl -i "http://localhost:5001/api/v0/files/mv?arg=/here&arg=/there"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/mv?arg=/here&arg=/there"
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:10:40 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Code: 0
        - Message: "file does not exist"

    + Body

        ```
        {
          "Code": 0,
          "Message": "file does not exist"
        }
        ```

+ Request With Argument

    This call depends upon a file in the Files API called 'here'.

    #### curl

        curl -i "http://localhost:5001/api/v0/files/mv?arg=/here&arg=/there"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/mv?arg=/here&arg=/there"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:09:45 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        ```

## cp [GET /files/cp{?arg,arg2}{&flush}]
Copy files into mfs.

+ Parameters
    + arg (string, required) - Source file to move.
    + arg2 (string, required) - Destination to copy object to.
    + flush (boolean, optional) - Flush target and ancestors after write. Default: true. Alias: f.

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/files/cp"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/cp"
        ```

+ Response 400

    + Headers

        ```
        Date: Fri, 19 Feb 2016 16:07:11 GMT
        Content-Length: 29
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        Argument 'source' is required
        ```

+ Request With Empty Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/files/cp?arg=&arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/cp?arg=&arg="
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:07:57 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "paths must not be empty"
        - Code: 0

    + Body

        ```
        {
          "Code": 0,
          "Message": "paths must not be empty"
        }
        ```

+ Request With Invalid Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/files/cp?arg=kitten&arg=kitten"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/cp?arg=kitten&arg=kitten"
        ```

+ Response 500


    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:08:45 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "paths must start with a leading slash"
        - Code: 0

    + Body

        ```
        {
          "Code": 0,
          "Message": "paths must start with a leading slash"
        }
        ```

+ Request With Non-Existent Argument

    This call depends upon a file in the Files API called 'here', which must not exist.

    #### curl

        curl -i "http://localhost:5001/api/v0/files/cp?arg=/here&arg=/there"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/cp?arg=/here&arg=/there"
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:10:40 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Code: 0
        - Message: "file does not exist"

    + Body

        ```
        {
          "Code": 0,
          "Message": "file does not exist"
        }
        ```

+ Request With Existenting Argument

    This call depends upon a file in the Files API called 'hest', which must exist.

    #### curl

        curl -i "http://localhost:5001/api/v0/files/cp?arg=/test&arg=/there"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/cp?arg=/test&arg=/there"
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:10:40 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Code: 0
        - Message: "directory already has entry by that name"

    + Body

        ```
        {
          "Code": 0,
          "Message": "directory already has entry by that name"
        }
        ```

+ Request With Argument

    This call depends upon a file in the Files API called 'there', and no 'here' file.

    #### curl

        curl -i "http://localhost:5001/api/v0/files/cp?arg=/there&arg=/here"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/cp?arg=/there&arg=/here"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:21:16 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        ```

## ls [GET /files/ls{?arg}{&flush}]
List directories.

+ Parameters
    + arg (string, required) - Path to show listing for.
    + l (boolean, optional) - Use long listing format.
    + flush (boolean, optional) - Flush target and ancestors after write. Default: true. Alias: f.

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/files/ls"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/ls"
        ```

+ Response 400

    + Headers

        ```
        Date: Fri, 19 Feb 2016 16:27:58 GMT
        Content-Length: 27
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        Argument 'path' is required
        ```

+ Request With Empty Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/files/ls?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/ls?arg="
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:30:10 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "paths must not be empty"
        - Code: 0

    + Body

        ```
        {
          "Code": 0,
          "Message": "paths must not be empty"
        }        ```

+ Request With Invalid Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/files/ls?arg=kitten"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/ls?arg=kitten"
        ```

+ Response 500


    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:30:12 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "paths must start with a leading slash"
        - Code: 0

    + Body

        ```
        {
          "Code": 0,
          "Message": "paths must start with a leading slash"
        }
        ```

+ Request With Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/files/ls?arg=/"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/ls?arg=/"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:31:10 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Entries (array)
            + (object)
                - Hash (Multihash)
                - Name (string)
                - Size (number)
                - Type (number)

    + Body

        ```
        {
          "Entries": [
            {
              "Hash": "",
              "Name": "test",
              "Size": 0,
              "Type": 0
            }
          ]
        }
        ```

+ Request With Argument And L Option

    #### curl

        curl -i "http://localhost:5001/api/v0/files/ls?arg=/&l=true"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/files/ls?arg=/&l=true"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 19 Feb 2016 16:31:10 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Entries (array)
            + (object)
                - Hash (Multihash)
                - Name (string)
                - Size (number)
                - Type (number)

    + Body

        ```
        {
          "Entries": [
            {
              "Hash": "QmT78zSuBmuS4z925WZfrqQ1qHaJ56DQaTfyMUF7F8ff5o",
              "Name": "test",
              "Size": 12,
              "Type": 0
            }
          ]
        }
        ```

# Group get

# Group id

Prints out information about the specified peer.
If no peer is specified, prints out local peers info.

## id [POST /id{?arg}]

Show IPFS Node ID info

+ Parameters

    + arg (string, required) - peerID of node to look up

+ Request Without Arguments

    This will default to showing your ID.

    #### curl

        curl -i -X POST "http://localhost:5001/api/v0/id"

    + Body

        ```
        curl -i -X POST "http://localhost:5001/api/v0/id"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Tue, 02 Feb 2016 22:10:37 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + ID (Multihash)
        + PublicKey (string)
        + Addresses (SwarmAddrs)
        + AgentVersion (string)
        + ProtocolVersion (string)

    + Body

        ```
        {
          "ID": "Qmece2RkXhsKe5CRooNisBTh4SK119KrXXGmoK6V3kb8aH",
          "PublicKey": "CAASpgIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDsXD74cPfcI0dJJzg9N3BApJvlTDmW2GsGfvjmq7Bpm++0JI3LvC3cASPqLb8aiJlynqqzgNkX/xZtAdn0ua63VUWZvamuC2HBEke2IGUF4mkgDdSTaKYMl8NlaSNZDUUthcljZ2aqkdXP+W217U/NjINksYll5IBBPGJqH5Wamb5uNXQM9LQOZSW/qP+T+NoaQGfid21oorHyeSHcugxNdvgPV0RXC6IfZS/1NkupNz2mboXdppKRs3hDKVrtz6/tYGi8kBDvx8susTxw4x8YbRHVnpjh9fIg++PLQUm5xaxQu89YSLsx23Wz3Twq2jg6gi2Tl8GZtgBaZwD9KWLpAgMBAAE=",
          "Addresses": [
            "/ip4/127.0.0.1/tcp/4001/ipfs/Qmece2RkXhsKe5CRooNisBTh4SK119KrXXGmoK6V3kb8aH",
            "/ip4/10.0.0.42/tcp/4001/ipfs/Qmece2RkXhsKe5CRooNisBTh4SK119KrXXGmoK6V3kb8aH",
            "/ip6/::1/tcp/4001/ipfs/Qmece2RkXhsKe5CRooNisBTh4SK119KrXXGmoK6V3kb8aH",
            "/ip6/2601:184:4400:78fc:62f8:1dff:fed2:1970/tcp/4001/ipfs/Qmece2RkXhsKe5CRooNisBTh4SK119KrXXGmoK6V3kb8aH",
            "/ip6/2601:184:4400:78fc:d00c:bbbe:d064:a237/tcp/4001/ipfs/Qmece2RkXhsKe5CRooNisBTh4SK119KrXXGmoK6V3kb8aH",
            "/ip4/50.136.95.149/tcp/4001/ipfs/Qmece2RkXhsKe5CRooNisBTh4SK119KrXXGmoK6V3kb8aH"
          ],
          "AgentVersion": "go-ipfs/0.4.0-dev",
          "ProtocolVersion": "ipfs/0.1.0"
        }
        17
        ```

+ Request With Empty Arguments

    #### curl

        curl -i -X POST "http://localhost:5001/api/v0/id?arg="

    + Body

        ```
        curl -i -X POST "http://localhost:5001/api/v0/id?arg="
        ```

+ Response 400

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Tue, 02 Feb 2016 22:11:24 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "Invalid peer id" (string)
        - Code: 1 (number)

    + Body

        ```
        {
          "Message": "Invalid peer id",
          "Code": 1
        }
        ```

+ Request With Invalid Arguments

    #### curl

        curl -i -X POST "http://localhost:5001/api/v0/config/id?arg=kitten"

    + Body

        ```
        curl -i -X POST "http://localhost:5001/api/v0/config/id?arg=kitten"
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Tue, 02 Feb 2016 22:12:29 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "routing: not found" (string)
        - Code: 0 (number)

    + Body

        ```
        {
          "Message": "routing: not found",
          "Code": 0
        }
        ```

+ Request With Argument

    #### curl

        curl -i -X POST "http://localhost:5001/api/v0/id?arg=QmepgFW7BHEtU4pZJdxaNiv75mKLLRQnPi1KaaXmQN4V1a"

    + Body

        ```
        curl -i -X POST "http://localhost:5001/api/v0/id?arg=QmepgFW7BHEtU4pZJdxaNiv75mKLLRQnPi1KaaXmQN4V1a"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Tue, 02 Feb 2016 22:07:08 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + ID (Multihash)
        + PublicKey (string)
        + Addresses (SwarmAddrs)
        + AgentVersion (string)
        + ProtocolVersion (string)

    + Body

        ```
        {
          "ID": "QmepgFW7BHEtU4pZJdxaNiv75mKLLRQnPi1KaaXmQN4V1a",
          "PublicKey": "CAASpgIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC8hSwYY1FXqjT5M36O/Q5fBeDhXE5ePvGAeN3MIibfChqQpgqBbXQi1gAp4TQypSTKl/AMy7hfzsKauieim7jHMgIYAB4pLoBQD1qGVn/n7CqzAR3gDg9umIGuAy15oT0uaqMDqSepfnyxEyPDqfDklgvmS/MAwfBHjH2IPcMIaFgZ6d6gVlhmwuH8WVQ/geumDqyKuU9Jy+SUozmxEu2Baylg4fuqxaxoqOiPFZeWKSCFAngFj3NPmLApE0Fy48/eEZ+t7iP6s/raupP4+Jk/AFNDJNos4VxUnLJpZ1g6W5vYkkt1kXbMTaqxFVryCdCW2UEOwEzjGPGkcIE4RJrHAgMBAAE=",
          "Addresses": [
            "/ip4/172.17.0.2/udp/4002/utp",
            "/ip4/188.40.116.66/tcp/4001",
            "/ip4/127.0.0.1/udp/4002/utp",
            "/ip4/172.17.0.2/tcp/4001",
            "/ip4/127.0.0.1/tcp/4001"
          ],
          "AgentVersion": "go-ipfs/0.4.0-dev",
          "ProtocolVersion": "ipfs/0.1.0"
        }
        ```

# Group init

# Group log

Interact with the daemon log output.

'ipfs log' contains utility commands to affect or read the logging
output of a running daemon.

This command cannot be called directly.

## level [POST /log/level{?arg1,arg2}]
'ipfs log level' is a utility command used to change the logging
output of a running daemon.

+ Parameters
    + arg1 (string) - The subsystem logging identifier. Use `all` for all subsystems.
        + Members
            - bitstwap
            - blockstore
            - dht
            - merkledag
            - all
    + arg2 (enum[string]) - The log level, with 'debug' the most verbose and 'panic' the least verbose.
        + Members
            - debug
            - info
            - warning
            - error
            - fatal
            - panic

+ Request Without Arguments

    #### curl

        curl -i -X POST "http://localhost:5001/api/v0/log/level"

    + Body

        ```
        curl -i -X POST "http://localhost:5001/api/v0/log/level"
        ```

+ Response 400

    + Headers

        ```
        Date: Fri, 05 Feb 2016 21:12:32 GMT
        Content-Length: 32
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        Argument 'subsystem' is required
        ```

+ Request With Empty Argument

    The response is the same if the first argument is invalid. For example:

        curl -i -X POST "http://localhost:5001/api/v0/log/level?arg=kitten"

    #### curl

        curl -i -X POST "http://localhost:5001/api/v0/log/level?arg="

    + Body

        ```
        curl -i -X POST "http://localhost:5001/api/v0/log/level?arg="
        ```

+ Response 400

    + Headers

        ```
        Date: Fri, 05 Feb 2016 21:13:04 GMT
        Content-Length: 28
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        Argument 'level' is required
        ```

+ Request With Invalid Subsystem Argument

    #### curl

        curl -i -X POST "http://localhost:5001/api/v0/log/level?arg=kitten&arg=info"

    + Body

        ```
        curl -i -X POST "http://localhost:5001/api/v0/log/level?arg=kitten&arg=info"
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 05 Feb 2016 21:22:27 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "Error: No such logger"
        - Code: 0

    + Body

        ```
        {
          "Message": "Error: No such logger",
          "Code": 0
        }
        ```

+ Request With Invalid Log Argument

    #### curl

        curl -i -X POST "http://localhost:5001/api/v0/log/level?arg=dht&arg=kitten"

    + Body

        ```
        curl -i -X POST "http://localhost:5001/api/v0/log/level?arg=dht&arg=kitten"
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 05 Feb 2016 21:22:27 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "logger: invalid log level"
        - Code: 0

    + Body

        ```
        {
          "Message": "logger: invalid log level",
          "Code": 0
        }
        ```

+ Request With Valid Arguments

    #### curl

        curl -i -X POST "http://localhost:5001/api/v0/log/level?arg=dht&arg=info"

    + Body

        ```
        curl -i -X POST "http://localhost:5001/api/v0/log/level?arg=dht&arg=info"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 05 Feb 2016 21:25:20 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        - Message (string)

    + Body

        ```
        {
          "Message": "Changed log level of 'dht' to 'info'\n"
        }
        ```

## tail [GET /log/tail]
`ipfs log tail` is a utility command used to read log output as it is written.

+ Request

    #### curl

        curl -i "http://localhost:5001/api/v0/log/tail"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/log/tail"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: text/plain
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Stream-Output: 1
        Date: Fri, 05 Feb 2016 21:36:44 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        - event (string)
        - peerID (Multihash)
        - session (string)
        - system (string)
        - time (string)

    + Body

        ```
        {
          "event": "updatePeer",
          "peerID": "QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ",
          "session": "90950f01-a408-455a-a560-767f326b7331",
          "system": "dht",
          "time": "2016-02-05T21:36:44.191536188Z"
        }
        ```

# Group ls

# Group mount

Mount is currently unstable. This will be updated when it is accessible through the
HTTP API.

Mounts IPFS to the filesystem (read-only).

Mount ipfs at a read-only mountpoint on the OS (default: /ipfs and /ipns).
All ipfs objects will be accessible under that directory. Note that the
root will not be listable, as it is virtual. Access known paths directly.

+ Parameters
    + ipfs-path (string, optional) - The path where IPFS should be mounted
    + ipns-path (string, optional) - The path where IPNS should be mounted

+ Request

    #### curl

        curl -i http://localhost:5001/api/v0/mount

    + Body

        ```
        curl -i http://localhost:5001/api/v0/mount
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Thu, 04 Feb 2016 23:10:05 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message
        - Code: 0

    + Body

        ```
        {
          "Message": "unable to check fuse version.\n\nDear User,\n\nBefore mounting, we must check your version of OSXFUSE. We are protecting\nyou from a nasty kernel panic we found in OSXFUSE versions \u003c2.7.2.[1]. To\nmake matters worse, it's harder than it should be to check whether you have\nthe right version installed...[2]. We've automated the process with the\nhelp of a little tool. We tried to install it, but something went wrong[3].\nPlease install it yourself by running:\n\n\tgo get github.com/jbenet/go-fuse-version/fuse-version\n\nYou can also stop ipfs from running these checks and use whatever OSXFUSE\nversion you have by running:\n\n\tipfs config DontCheckOSXFUSE true\n\n[1]: https://github.com/ipfs/go-ipfs/issues/177\n[2]: https://github.com/ipfs/go-ipfs/pull/533\n[3]: exit status 2\n# github.com/jbenet/go-fuse-version\n../go/src/github.com/jbenet/go-fuse-version/version_darwin.go:6:11: fatal error: 'fuse/fuse.h' file not found\n #include \u003cfuse/fuse.h\u003e\n          ^\n1 error generated.\n\n",
          "Code": 0
        }
        ```

+ Request With Options

    The response appears to be the same for any option provided.

    #### curl

        curl -i "http://localhost:5001/api/v0/mount&ipfs-mount=\"~\""

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/mount&ipfs-mount=\"~\""
        ```

+ Response 404

    + Headers

        ```
        Date: Thu, 04 Feb 2016 23:12:47 GMT
        Content-Length: 18
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        404 page not found
        ```

# Group name

## publish

## resolve

# Group object

## data

## get

## links

## new

## patch

## put

## stat

# Group pin

## add

## ls

## rm

# Group ping
Send echo request packets to IPFS hosts.

## ping [GET /ping{?arg}{&count}]
A tool to test sending data to other nodes. It finds nodes
via the routing system, sends pings, waits for pongs, and prints out round-
trip latency information.


+ Parameters
    + arg (string, required) - ID of peer to be pinged.
    + count (number, required) - Number of ping messages to send. Alias: n.

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/ping"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/ping"
        ```

+ Response 400

    + Headers

        ```
        Date: Thu, 11 Feb 2016 21:32:09 GMT
        Content-Length: 30
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        Argument 'peer ID' is required
        ```

+ Request With Empty Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/ping?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/ping?arg="
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Thu, 11 Feb 2016 21:32:30 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "multihash too short. must be > 3 bytes"
        - Code: 0

    + Body

        ```
        {
          "Message": "multihash too short. must be > 3 bytes",
          "Code": 0
        }
        ```

+ Request With Invalid Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/ping?arg=kitten"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/ping?arg=kitten"
        ```

+ Response 500


    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Thu, 11 Feb 2016 21:33:04 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "multihash length inconsistent: &{6  174 [128 54 35]}"
        - Code: 0

    + Body

        ```
        {
          "Message": "multihash length inconsistent: &{6  174 [128 54 35]}",
          "Code": 0
        }
        ```

+ Request With Invalid Peer Lookup

    #### curl

        curl -i "http://localhost:5001/api/v0/ping?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/ping?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 11 Feb 2016 21:33:46 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        - Success (boolean)
        - Time (number)
        - Text (string)

    + Body

        ```
        {
          "Success": false,
          "Time": 0,
          "Text": "Looking up peer QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"
        }
        {
          "Success": false,
          "Time": 0,
          "Text": "Peer lookup error: routing: not found"
        }
        ```

+ Request With Valid Peer Argument And Count

    #### curl

        curl -i "http://localhost:5001/api/v0/ping?arg=QmT19P4HExyfDqZAU65LWyuuJU31G8uWKPoFkQPEcqYGD2&count=3"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/ping?arg=QmT19P4HExyfDqZAU65LWyuuJU31G8uWKPoFkQPEcqYGD2&count=3"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 11 Feb 2016 21:35:49 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        - Success (boolean)
        - Time (number)
        - Text (string)

    + Body

        ```
        {
          "Success": false,
          "Time": 0,
          "Text": "PING QmT19P4HExyfDqZAU65LWyuuJU31G8uWKPoFkQPEcqYGD2."
        }
        {
          "Success": true,
          "Time": 1074991663,
          "Text": ""
        }
        {
          "Success": true,
          "Time": 175805337,
          "Text": ""
        }
        {
          "Success": true,
          "Time": 175803520,
          "Text": ""
        }
        {
          "Success": false,
          "Time": 0,
          "Text": "Average latency: 475.53ms"
        }
        ```

# Group refs

## local

# Group repo

## gc

# Group resolve

# Group stats

## bw

# Group swarm

## addrs

### `swarm addrs local`

## connect

## disconnect

## filters

### `swarm filters add`

### `swarm filters rm`

## peers

# Group tar

## add

## cat

# Group tour
This is a tour that takes you through various IPFS concepts,
features, and tools to make sure you get up to speed with
IPFS very quickly.

## tour [GET /tour{?arg}]

Start the tour

+ Parameters
    + arg (string, optional) - Topic id to go to

+ Request Without Arguments

    The response is the same if the argument is empty. For example:

        curl -i "http://localhost:5001/api/v0/tour?arg="

    #### curl

        curl -i "http://localhost:5001/api/v0/tour"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/tour"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: text/plain
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Stream-Output: 1
        Date: Thu, 11 Feb 2016 22:47:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```

        Tour 0.0 - Hello Mars


            check things work
            

        ```

+ Request With Invalid Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/tour?arg=kitten"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/tour?arg=kitten"
        ```

+ Response 200


    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: text/plain
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Stream-Output: 1
        Date: Thu, 11 Feb 2016 22:48:34 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        ERROR
        no topic with id: kitten

        - * 0.0   Hello Mars
        -   0.1   Hello Mars
        -   0.2   About IPFS
        -   1.1   Filesystem
        -   1.2   Getting Files
        -   1.3   Adding Files
        -   1.4   Directories
        -   1.5   Distributed
        -   1.6   Getting Files
        -   2.0   Basics - init
        -   2.1   Basics - help
        -   2.2   Basics - update
        -   2.3   Basics - config
        -   3.0   
        -   3.1   
        -   3.2   
        -   3.3   
        -   3.4   
        -   3.5   
        -   3.6   Immutability
        -   3.7   
        -   3.8   
        -   3.9   
        -   4.0   
        -   4.1   
        -   4.2   
        -   4.3   
        -   4.4   
        -   4.5   
        -   5.0   
        -   5.1   
        -   5.2   
        -   6.0   
        -   6.1   
        -   6.2   
        -   6.3   
        -   6.4   
        -   7.0   
        -   7.1   
        -   7.2   
        -   7.3   
        -   8.0   
        -   8.1   
        -   8.2   PKI Review
        -   8.3   
        -   8.4   
        -   8.5   
        -   8.6   
        -   9.0   
        -   9.1   
        -   9.2   
        -   10.0  
        -   10.1  
        -   10.2  
        -   10.3  
        -   10.4  
        -   10.5  
        -   11.0  
        -   11.1  
        -   11.2  
        -   11.3  
        -   11.4  
        -   11.5  
        -   11.6  
        ```

+ Request With Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/tour?arg=11.5"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/tour?arg=11.5"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: text/plain
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Stream-Output: 1
        Date: Thu, 11 Feb 2016 22:49:37 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```

        Tour 11.5 - 



        ```

## list [GET /tour/list]
Show a list of all tour topics.

+ Request

    #### curl

        curl -i "http://localhost:5001/api/v0/tour/list"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/tour/list"
        ```

+ Response 200 (text/plain)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: text/plain
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Stream-Output: 1
        Date: Thu, 11 Feb 2016 22:50:39 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        - * 0.0   Hello Mars
        -   0.1   Hello Mars
        -   0.2   About IPFS
        -   1.1   Filesystem
        -   1.2   Getting Files
        -   1.3   Adding Files
        -   1.4   Directories
        -   1.5   Distributed
        -   1.6   Getting Files
        -   2.0   Basics - init
        -   2.1   Basics - help
        -   2.2   Basics - update
        -   2.3   Basics - config
        -   3.0   
        -   3.1   
        -   3.2   
        -   3.3   
        -   3.4   
        -   3.5   
        -   3.6   Immutability
        -   3.7   
        -   3.8   
        -   3.9   
        -   4.0   
        -   4.1   
        -   4.2   
        -   4.3   
        -   4.4   
        -   4.5   
        -   5.0   
        -   5.1   
        -   5.2   
        -   6.0   
        -   6.1   
        -   6.2   
        -   6.3   
        -   6.4   
        -   7.0   
        -   7.1   
        -   7.2   
        -   7.3   
        -   8.0   
        -   8.1   
        -   8.2   PKI Review
        -   8.3   
        -   8.4   
        -   8.5   
        -   8.6   
        -   9.0   
        -   9.1   
        -   9.2   
        -   10.0  
        -   10.1  
        -   10.2  
        -   10.3  
        -   10.4  
        -   10.5  
        -   11.0  
        -   11.1  
        -   11.2  
        -   11.3  
        -   11.4  
        -   11.5  
        -   11.6  
        ```


## next [GET /tour/next]
Show the next tour topic.

+ Request

    #### curl

        curl -i "http://localhost:5001/api/v0/tour/next"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/tour/next"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: text/plain
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Stream-Output: 1
        Date: Thu, 11 Feb 2016 22:50:39 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        
        Tour 0.1 - Hello Mars


            how this works

        ```

## restart [GET /tour/restart]
Restart the IPFS Tour


+ Request

    #### curl

        curl -i "http://localhost:5001/api/v0/tour/restart"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/tour/restart"
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: text/plain
        Server: go-ipfs/0.4.0-dev
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Stream-Output: 1
        Date: Thu, 11 Feb 2016 22:50:39 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        ```

# Group update

# Group version

Show version details about the IPFS node.

## version [GET /version]
Returns the current version of ipfs and exits.

+ Request

    #### curl

        curl -i "http://localhost:5001/api/v0/version"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/version"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Tue, 02 Feb 2016 22:15:17 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        - Version: "0.4.0-dev" (string)
        - Commit: "b036b23a233a64faa6a456522b0f45763be70e64" (string)
        - Repo:  "3" (string)

    + Body

        ```
        {
          "Version": "0.4.0-dev",
          "Commit": "",
          "Repo": "3"
        }
        ```

# Data Structures

## Error (object)

The IPFS error object

+ message (string) - the error message
+ code (enum[int]) - the status code
    + Members
        + `0`
        + `1`

## ndjson (object)

Newline delimited JSON

### Sample

  ```
  {
    "Name": "test/test",
    "Bytes": 12
  }
  {
    "Name": "test/test",
    "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
  }
  {
    "Name": "test",
    "Hash": "QmV7sQezAjKh9pokjUPLL7ebuMF5t56UmfhK4cJncCcrNZ"
  }
  ```

## Multihash (string)
An hash as defined [here](https://github.com/jbenet/multihash)

### Sample

  `QmNjRVohhWBX31EoaAXkrj5mPF9vQNcTVvQgWHNwdxweCN`

## SwarmAddrs (object)
A list of swarm addresses.

### Sample

  ```
  "QmNRCEwFMgCcbjNk5bFud9oqjJduvjBNbkiM8SuxuLh3GS": [
    "/ip4/127.0.0.1/tcp/4001",
    "/ip4/172.17.42.1/tcp/4001",
    "/ip4/192.168.2.3/tcp/4001",
    "/ip6/::1/tcp/4001"
  ],
  "QmNRV7kyUxYaQ4KQxFXPYm8EfuzJbtGn1wSFenjXL6LD8y": [
    "/ip4/127.0.0.1/tcp/4001",
    "/ip4/172.17.42.1/tcp/4001",
    "/ip4/5.9.33.222/tcp/4001",
    "/ip6/2a01:4f8:161:124a::1337:cafe/tcp/4001",
    "/ip6/2a01:4f8:161:124a::2/tcp/4001",
    "/ip6/::1/tcp/4001",
    "/ip6/fcfc:762a:e12a:245d:8e5b:6a40:f65:acab/tcp/4001"
  ]
  ```

## MultiAddr (string)
A multiaddr as defined [here](https://github.com/jbenet/multiaddr).

### Sample

  `/ip6/fcfc:762a:e12a:245d:8e5b:6a40:f65:acab/tcp/4001`
